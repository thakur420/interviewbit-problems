/**
You are given an array of N integers, A1, A2 ,…, AN. Return maximum value of f(i, j) for all 1 ≤ i, j ≤ N.
f(i, j) is defined as |A[i] - A[j]| + |i - j|, where |x| denotes absolute value of x.

For example,
A=[1, 3, -1]
f(1, 1) = f(2, 2) = f(3, 3) = 0
f(1, 2) = f(2, 1) = |1 - 3| + |1 - 2| = 3
f(1, 3) = f(3, 1) = |1 - (-1)| + |1 - 3| = 4
f(2, 3) = f(3, 2) = |3 - (-1)| + |2 - 3| = 5
So, we return 5.

problem link : https://www.interviewbit.com/problems/maximum-absolute-difference/
**/
int Solution::maxArr(vector<int> &A) {
    int size=A.size(),min=A[0],max=A[0];
    for(int i=0;i<size;i++)
        A[i]=A[i]+i;
    for(int i=1;i<size;i++)
        if(min>A[i])
            min = A[i];
    for(int i=1;i<size;i++)
        if(max<A[i])
            max = A[i];
    int diff_add=abs(min-max);
    for(int i=0;i<size;i++)
        A[i]=A[i]-2*i;
    min=max=A[0];
    for(int i=1;i<size;i++)
        if(min>A[i])
            min = A[i];
    for(int i=1;i<size;i++)
        if(max<A[i])
            max = A[i];
    int diff_sub=abs(min-max);
    if(diff_add>diff_sub)
        return diff_add;
    return diff_sub;
}

