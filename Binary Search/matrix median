/**
Given a N cross M matrix in which each row is sorted, find the overall median of the matrix. Assume N*M is odd.

For example,
Matrix=
[1, 3, 5]
[2, 6, 9]
[3, 6, 9]
A = [1, 2, 3, 3, 5, 6, 6, 9, 9]
Median is 5. So, we return 5.
Note: No extra memory is allowed.

problem link : https://www.interviewbit.com/problems/matrix-median/
**/

int Solution::findMedian(vector<vector<int> > &A){
   int low=0,high=INT_MAX,median_pos=A.size()*A[0].size()/2;
    while(low<=high){
        int mid = (low+high)/2,less_equal=0,equal=0;
        pair<vector<int>::iterator,vector<int>::iterator> eq_it;
        for(int i=0;i<A.size();i++){
            less_equal += upper_bound(A[i].begin(), A[i].end(), mid)-A[i].begin();
            eq_it = equal_range(A[i].begin(), A[i].end(), mid);
            equal += (eq_it.second-eq_it.first);
        }
        int count_less = less_equal-equal;
        if(count_less <= median_pos && less_equal>median_pos)
            return mid;
        else if(count_less > median_pos)
            high = mid-1;
        else
            low = mid+1;
    }
}
