/* Evaluate the value of an arithmetic expression in Reverse Polish Notation.

Valid operators are +, -, *, /. Each operand may be an integer or another expression.

Examples:
  ["2", "1", "+", "3", "*"] -> ((2 + 1) * 3) -> 9
  ["4", "13", "5", "/", "+"] -> (4 + (13 / 5)) -> 6
  
 problem link : https://www.interviewbit.com/problems/evaluate-expression/
 
 */
 int Solution::evalRPN(vector<string> &A) {
    stack<int> result;
    int n = A.size();
    for(int i = 0;i < n;i++){
        if(A[i] != "+" && A[i] != "-" && A[i] != "*" && A[i] != "/")
            result.push(stoi(A[i]));
        else{
            char op = A[i][0]; 
            int op1,op2;
            switch(op){
                case '+':
                    op1 = result.top();result.pop();
                    op2 = result.top();result.pop();
                    result.push(op1 + op2); 
                    break;
                case '-':
                    op1 = result.top();result.pop();
                    op2 = result.top();result.pop();
                    result.push(op2 - op1); 
                    break;
                case '*':
                    op1 = result.top();result.pop();
                    op2 = result.top();result.pop();
                    result.push(op2 * op1); 
                    break;
                case '/':
                    op1 = result.top();result.pop();
                    op2 = result.top();result.pop();
                    result.push(op2 / op1); 
                    break;
            }    
        }
    }
    return result.top();
}

