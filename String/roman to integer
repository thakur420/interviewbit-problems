/**
Given a roman numeral, convert it to an integer.
Input is guaranteed to be within the range from 1 to 3999.
Read more details about roman numerals at Roman Numeric System

Example :
Input : "XIV"
Return : 14
Input : "XX"
Output : 20

problem link :https://www.interviewbit.com/problems/roman-to-integer/
**/

int Solution::romanToInt(string A) {
    int num=0;
    for(int i=A.length()-1;i>=0;i--){
        switch(A[i]){
            case 'I':
                if(A[i+1]!='I'&&A[i+1]!='\0')
                    num-=1;
                else
                    num+=1;
            break;
            case 'V':
                if(A[i+1]!='I' && A[i+1]!='V' && A[i+1]!='\0')
                    num-=5;
                else
                    num+=5;
            break;
            case 'X':
                if(A[i+1]!='I' && A[i+1]!='V' && A[i+1]!='X' && A[i+1]!='\0')
                    num-=10;
                else
                    num+=10;
            break;
            case 'L':
                if(A[i+1]=='C' || A[i+1]=='D' || A[i+1]=='M')
                    num-=50;
                else
                    num+=50;
            break;
            case 'C':
                if(A[i+1]=='D' || A[i+1]=='M')
                    num-=100;
                else
                    num+=100;
            break;
            case 'D':
                if(A[i+1]=='M')
                    num-=500;
                else
                    num+=500;
            break;
            case 'M':
                num+=1000;
            break;
        }
    }
    return num;
}

