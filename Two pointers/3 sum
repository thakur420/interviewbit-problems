/* Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. 
Return the sum of the three integers.
Assume that there will only be one solution

Example: 
given array S = {-1 2 1 -4}, 
and target = 1.

The sum that is closest to the target is 2. (-1 + 2 + 1 = 2)

problem link : https://www.interviewbit.com/problems/3-sum/
**/
int Solution::threeSumClosest(vector<int> &A, int B) {
    sort(A.begin(),A.end());
    int  min = INT_MAX,n = A.size();
    for(int i = 0; i < A.size()-2;i++){
        int sum = B-A[i];
        for(int j = i+1,next = n-1;j < next;){
            if(sum == A[j] + A[next])
                return B;
            else if(sum > A[j] + A[next]){
                if(abs(A[i]+A[j]+A[next]-B) < abs(min))
                    min = A[i]+A[j]+A[next]-B;
                j++;
            }
            else{
                if(abs(A[i]+A[j]+A[next]-B) < abs(min))
                    min = A[i]+A[j]+A[next]-B;
                next--;
            }
       }
    }
    return min + B;
}
