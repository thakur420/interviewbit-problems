/**

A robot is located at the top-left corner of an A x B grid (marked ‘Start’ in the diagram below).

Path Sum: Example 1
The robot can only move either down or right at any point in time. 
The robot is trying to reach the bottom-right corner of the grid 
How many possible unique paths are there?
Note: A and B will be such that the resulting answer fits in a 32 bit signed integer.

Example :
Input : A = 2, B = 2
Output : 2

2 possible routes : (0, 0) -> (0, 1) -> (1, 1) 
              OR  : (0, 0) -> (1, 0) -> (1, 1)
              
problem link : https://www.interviewbit.com/problems/grid-unique-paths/

**/

int Solution::uniquePaths(int A, int B) {
    A=A-1;
    B=B-1;
    int tot=A+B,k=1;
    int upper=(A>B?A:B);
    int lower=(A<B?A:B);
    long long sum=1;
    for(int i=upper+1;i<=tot;i++){
        sum*=i;
        if(k<=lower&&sum%k==0)
            sum/=k++;
    }
    return sum;
}
